version: "3.8"

services:
  service-registry:
    build: ./service-registry
    container_name: service-registry
    ports:
      - "8761:8761"
    networks:
      - baksho-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - baksho-net

  user-service:
    build: ./user_service
    container_name: user-service
    ports:
      - "5001:5001"
    environment:
      - MONGO_URI=mongodb://mongodb:27017/user-service_db
      - JWT_SECRET=T7bH5KSsPtfAvaTJZpHjZ1NDwGADMxUA
      - EUREKA_HOST=service-registry
      - EUREKA_PORT=8761
    depends_on:
      mongodb:
        condition: service_started
      service-registry:
        condition: service_healthy
    networks:
      - baksho-net

  campaign-service:
    build: ./campaign-service
    container_name: campaign-service
    ports:
      - "8001:8001"
    environment:
      - EUREKA_SERVER=http://service-registry:8761/eureka
      - APP_HOST=campaign-service
      - APP_PORT=8001
    volumes:
      - ./campaign-service/db_data:/app/db_data
    depends_on:
      service-registry:
        condition: service_healthy
    networks:
      - baksho-net

  notification-service:
    build: ./notification-service # Assumes your FastAPI service is in the 'notification-service' directory
    container_name: notification-service
    ports:
      - "8002:8002"
    environment:
      # This URL points to the database file inside the container's volume
      - DATABASE_URL=sqlite:///./db_data/notifications.db
      # Environment variables for service discovery with Eureka
      - EUREKA_SERVER=http://service-registry:8761/eureka
      - APP_HOST=notification-service
      - APP_PORT=8000
    volumes:
      - notification-db-data:/app/db_data # Persists the SQLite database
    depends_on:
      service-registry:
        condition: service_healthy
    networks:
      - baksho-net

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - EUREKA_SERVER_URL=http://service-registry:8761/eureka
      - JWT_SECRET=T7bH5KSsPtfAvaTJZpHjZ1NDwGADMxUA
    depends_on:
      service-registry:
        condition: service_healthy
      user-service:
        condition: service_started
      campaign-service:
        condition: service_started
      notification-service: # Added dependency on the new service
        condition: service_started
    networks:
      - baksho-net

  mongo-express:
    image: mongo-express:1.0.2-20
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=12345678
    depends_on:
      - mongodb
    networks:
      - baksho-net

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=12345678
      - MINIO_BROWSER_CORS_ALLOW_ORIGIN=http://localhost:3000
    command: server /data --console-address ":9001"
    networks:
      - baksho-net

  campaign-sqlite-web:
    image: coleifer/sqlite-web
    container_name: campaign-sqlite-web
    ports:
      - "8082:8080"
    volumes:
      - ./campaign-service/db_data:/data
    environment:
      - SQLITE_DATABASE=/data/campaigns.db
    networks:
      - baksho-net

  notification-sqlite-web:
    image: coleifer/sqlite-web
    container_name: notification-sqlite-web
    ports:
      - "8083:8080" # New port on the host to avoid conflicts
    volumes:
      - notification-db-data:/data # Mounts the notification service's volume
    environment:
      - SQLITE_DATABASE=/data/notifications.db # Points to the notification db
    networks:
      - baksho-net

volumes:
  mongo-data:
  minio_data:
  notification-db-data: # Added volume for notification service's database

networks:
  baksho-net:
    driver: bridge
